// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Job {
  id          String     @id @default(cuid())
  title       String
  description String
  education   String?
  experience  Int?
  skills      String[]
  status      String     @default("in_progress") // "in_progress" | "completed" | "error"

  userId      String

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  matches     Match[]    @relation("JobMatches")
}

model Candidate {
  id          String     @id @default(cuid())
  name        String
  email       String?
  education   String?
  experience  String?
  skills      String[]
  summary     String?
  cvUrl       String?

  userId      String

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  matches     Match[]    @relation("CandidateMatches")
}

model Match {
  id          String     @id @default(cuid())
  jobId       String
  candidateId String
  score       Float
  createdAt   DateTime   @default(now())

  job         Job        @relation("JobMatches", fields: [jobId], references: [id], onDelete: Cascade)
  candidate   Candidate  @relation("CandidateMatches", fields: [candidateId], references: [id], onDelete: Cascade)
}
